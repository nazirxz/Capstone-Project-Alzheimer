// Generated by view binder compiler. Do not edit!
package com.capstone.alzheimercare.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.alzheimercare.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPatientUpdateProfileBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextInputLayout addressTxt;

  @NonNull
  public final ImageView avatar;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final TextInputLayout bloodTypeText;

  @NonNull
  public final FloatingActionButton changePhoto;

  @NonNull
  public final CardView cvAvatar;

  @NonNull
  public final TextInputLayout dateBirthTxt;

  @NonNull
  public final TextInputLayout emailTxt;

  @NonNull
  public final TextInputLayout fullNameTxt;

  @NonNull
  public final TextInputLayout genderTxt;

  @NonNull
  public final TextInputEditText inputAddress;

  @NonNull
  public final TextInputEditText inputBloodType;

  @NonNull
  public final TextInputEditText inputDateBirth;

  @NonNull
  public final TextInputEditText inputEmail;

  @NonNull
  public final TextInputEditText inputFullName;

  @NonNull
  public final TextInputEditText inputGender;

  @NonNull
  public final TextInputEditText inputPhoneNumber;

  @NonNull
  public final TextInputLayout phoneNumberTxt;

  @NonNull
  public final Button saveChangesBtn;

  private FragmentPatientUpdateProfileBinding(@NonNull NestedScrollView rootView,
      @NonNull TextInputLayout addressTxt, @NonNull ImageView avatar, @NonNull ImageButton backBtn,
      @NonNull TextInputLayout bloodTypeText, @NonNull FloatingActionButton changePhoto,
      @NonNull CardView cvAvatar, @NonNull TextInputLayout dateBirthTxt,
      @NonNull TextInputLayout emailTxt, @NonNull TextInputLayout fullNameTxt,
      @NonNull TextInputLayout genderTxt, @NonNull TextInputEditText inputAddress,
      @NonNull TextInputEditText inputBloodType, @NonNull TextInputEditText inputDateBirth,
      @NonNull TextInputEditText inputEmail, @NonNull TextInputEditText inputFullName,
      @NonNull TextInputEditText inputGender, @NonNull TextInputEditText inputPhoneNumber,
      @NonNull TextInputLayout phoneNumberTxt, @NonNull Button saveChangesBtn) {
    this.rootView = rootView;
    this.addressTxt = addressTxt;
    this.avatar = avatar;
    this.backBtn = backBtn;
    this.bloodTypeText = bloodTypeText;
    this.changePhoto = changePhoto;
    this.cvAvatar = cvAvatar;
    this.dateBirthTxt = dateBirthTxt;
    this.emailTxt = emailTxt;
    this.fullNameTxt = fullNameTxt;
    this.genderTxt = genderTxt;
    this.inputAddress = inputAddress;
    this.inputBloodType = inputBloodType;
    this.inputDateBirth = inputDateBirth;
    this.inputEmail = inputEmail;
    this.inputFullName = inputFullName;
    this.inputGender = inputGender;
    this.inputPhoneNumber = inputPhoneNumber;
    this.phoneNumberTxt = phoneNumberTxt;
    this.saveChangesBtn = saveChangesBtn;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPatientUpdateProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPatientUpdateProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_patient_update_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPatientUpdateProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_txt;
      TextInputLayout addressTxt = ViewBindings.findChildViewById(rootView, id);
      if (addressTxt == null) {
        break missingId;
      }

      id = R.id.avatar;
      ImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.blood_type_text;
      TextInputLayout bloodTypeText = ViewBindings.findChildViewById(rootView, id);
      if (bloodTypeText == null) {
        break missingId;
      }

      id = R.id.change_photo;
      FloatingActionButton changePhoto = ViewBindings.findChildViewById(rootView, id);
      if (changePhoto == null) {
        break missingId;
      }

      id = R.id.cv_avatar;
      CardView cvAvatar = ViewBindings.findChildViewById(rootView, id);
      if (cvAvatar == null) {
        break missingId;
      }

      id = R.id.date_birth_txt;
      TextInputLayout dateBirthTxt = ViewBindings.findChildViewById(rootView, id);
      if (dateBirthTxt == null) {
        break missingId;
      }

      id = R.id.email_txt;
      TextInputLayout emailTxt = ViewBindings.findChildViewById(rootView, id);
      if (emailTxt == null) {
        break missingId;
      }

      id = R.id.full_name_txt;
      TextInputLayout fullNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (fullNameTxt == null) {
        break missingId;
      }

      id = R.id.gender_txt;
      TextInputLayout genderTxt = ViewBindings.findChildViewById(rootView, id);
      if (genderTxt == null) {
        break missingId;
      }

      id = R.id.input_address;
      TextInputEditText inputAddress = ViewBindings.findChildViewById(rootView, id);
      if (inputAddress == null) {
        break missingId;
      }

      id = R.id.input_blood_type;
      TextInputEditText inputBloodType = ViewBindings.findChildViewById(rootView, id);
      if (inputBloodType == null) {
        break missingId;
      }

      id = R.id.input_date_birth;
      TextInputEditText inputDateBirth = ViewBindings.findChildViewById(rootView, id);
      if (inputDateBirth == null) {
        break missingId;
      }

      id = R.id.input_email;
      TextInputEditText inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.input_full_name;
      TextInputEditText inputFullName = ViewBindings.findChildViewById(rootView, id);
      if (inputFullName == null) {
        break missingId;
      }

      id = R.id.input_gender;
      TextInputEditText inputGender = ViewBindings.findChildViewById(rootView, id);
      if (inputGender == null) {
        break missingId;
      }

      id = R.id.input_phone_number;
      TextInputEditText inputPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (inputPhoneNumber == null) {
        break missingId;
      }

      id = R.id.phone_number_txt;
      TextInputLayout phoneNumberTxt = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumberTxt == null) {
        break missingId;
      }

      id = R.id.save_changes_btn;
      Button saveChangesBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveChangesBtn == null) {
        break missingId;
      }

      return new FragmentPatientUpdateProfileBinding((NestedScrollView) rootView, addressTxt,
          avatar, backBtn, bloodTypeText, changePhoto, cvAvatar, dateBirthTxt, emailTxt,
          fullNameTxt, genderTxt, inputAddress, inputBloodType, inputDateBirth, inputEmail,
          inputFullName, inputGender, inputPhoneNumber, phoneNumberTxt, saveChangesBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
